---
# file: roles/opendkim/tasks/main.yml

- name: Install Packages (RedHat)
  yum: >
    pkg={{ item }}
    state=latest
  with_items:
    - opendkim
  when: ansible_os_family == 'RedHat'
  notify:
    - Restart Opendkim
    - Restart Postfix
  tags:
    - opendkim
    - email

- name: Install Packages (Debian)
  apt: >
    pkg={{ item }}
    state=latest
  with_items:
    - opendkim
    - opendkim-tools
  when: ansible_os_family == 'Debian'
  notify:
    - Restart Opendkim
    - Restart Postfix
  tags:
    - opendkim
    - email

- name: Create required folders
  file: >
    path='{{ item.path }}'
    owner='{{ opendkim_user }}'
    group='{{ opendkim_group }}'
    mode='{{ item.mode }}'
    state=directory
  with_items:
    - '{{ opendkim_dir_run }}'
    - '{{ opendkim_dir_postfix_run }}'
    - '{{ opendkim_dir_conf }}'
    - '{{ opendkim_dir_keys }}'
  tags:
    - opendkim
    - email

- name: Create key folders
  file: >
    path='{{ opendkim_dir_keys.path }}/{{ item.name }}'
    owner='{{ opendkim_user }}'
    group='{{ opendkim_group }}'
    mode=0700
    state=directory
  with_items: '{{ opendkim_domains }}'
  tags:
    - opendkim
    - email
    
- name: Copy Private Keys
  copy: 
      content: '{{ item.private_key }}'
      dest: '{{ opendkim_dir_keys.path }}/{{ item.name }}/{{ item.selector }}.private'
  when: item.private_key is defined and item.private_key != ''
  with_items: '{{ opendkim_domains }}'
  tags:
    - opendkim
    - email

- name: Generate Private Keys
  command: >
    opendkim-genkey -s {{ item.selector }} -d {{ item.name }}
    chdir={{ opendkim_dir_keys.path }}/{{ item.name }}
    creates={{ opendkim_dir_keys.path }}/{{ item.name }}/{{ item.selector }}.private
  when: item.private_key is not defined or item.private_key == ''
  with_items: '{{ opendkim_domains }}'
  register: opendkim_keys_generated
  tags:
    - opendkim
    - email
    
- name: Save Private Keys Locally
  fetch: >
    src={{ opendkim_dir_keys.path }}/{{ item.name }}/{{ item.selector }}.private 
    dest={{ opendkim_local_keys_path }}/{{ item.name }}/{{ item.selector }}.private
    flat=yes
    fail_on_missing=yes
  with_items: '{{ opendkim_domains }}'
  when: opendkim_save_keys_locally    
  tags:
    - opendkim
    - email

- name: Save Public Keys Locally
  fetch: >
    src={{ opendkim_dir_keys.path }}/{{ item.name }}/{{ item.selector }}.txt
    dest={{ opendkim_local_keys_path }}/{{ item.name }}/{{ item.selector }}.public
    flat=yes
    fail_on_missing=no
  with_items: '{{ opendkim_domains }}'
  when: opendkim_save_keys_locally    
  tags:
    - opendkim
    - email
    
- name: Read Public Keys
  command: 'cat {{ opendkim_dir_keys.path }}/{{ item.item.name }}/{{ item.item.selector }}.txt'
  when: item|changed
  with_items: '{{ opendkim_keys_generated.results }}'
  register: opendkim_keys_generated_value
  tags:
    - opendkim
    - email
  
- name: Output Public Keys
  debug: >
    msg='{{ item.stdout }}'
  when: item|changed
  with_items: '{{ opendkim_keys_generated_value.results }}'

  tags:
    - opendkim
    - email


- name: Set key file permissions
  file: >
    path={{opendkim_dir_keys.path}}/{{ item.name }}/{{ item.selector }}.private
    owner='{{ opendkim_user }}'
    group='{{ opendkim_group }}'
    mode=0600
    state=file
  with_items: '{{ opendkim_domains }}'
  tags:
    - opendkim
    - email

- name: Load Opendkim files
  template: >
    src={{ item.src }}
    dest={{ item.dest }}
    owner='{{ opendkim_user }}'
    group='{{ opendkim_group }}'
    mode=0644
  with_items:
        - { src: 'KeyTable',          dest: '{{ opendkim_dir_conf.path }}/KeyTable' }
        - { src: 'SigningTable',      dest: '{{ opendkim_dir_conf.path }}/SigningTable' }
        - { src: 'TrustedHosts',      dest: '{{ opendkim_dir_conf.path }}/TrustedHosts' }
        - { src: 'etc_opendkim.conf', dest: '/etc/opendkim.conf' }
  notify:
    - Restart Opendkim
  tags:
    - opendkim
    - email

- name: Connect to Postfix
  lineinfile: >
    dest=/etc/postfix/main.cf
    regexp='{{ item.reg }}'
    line='{{ item.line }}'
    state=present
  with_items:
    - reg: '^milter_protocol'
      line: 'milter_protocol = 6'
    - reg: '^milter_default_action'
      line: 'milter_default_action = accept'
    - reg: '^smtpd_milters'
      line: 'smtpd_milters = unix:{{ opendkim_dir_run.path }}{{ opendkim_file_socket }}'
    - reg: '^non_smtpd_milters'
      line: 'non_smtpd_milters = unix:{{ opendkim_dir_run.path }}{{ opendkim_file_socket }}'
  notify:
    - Restart Postfix
  tags:
    - opendkim
    - email

- name: Add Postfix to opendkim group
  user: name=postfix groups=opendkim append=yes
  tags:
    - opendkim
    - email

- name: create pid directory
  copy:
    content: "d /var/run/opendkim 744 opendkim opendkim"
    dest: /usr/lib/tmpfiles.d/opendkim.conf
